{"version":3,"file":"treasury.umd.js","sources":["../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/index.js","../node_modules/safe-buffer/index.js","../node_modules/base-x/src/index.js","../node_modules/bs58/index.js","../node_modules/text-encoding-utf-8/lib/encoding.lib.mjs","../src/accounts.ts","../node_modules/borsh/lib/index.js","../src/extendBorsh.ts","../src/instructions.ts","../src/treasury.ts"],"sourcesContent":["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n","/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","'use strict';\n\n// This is free and unencumbered software released into the public domain.\n// See LICENSE.md for more information.\n\n//\n// Utilities\n//\n\n/**\n * @param {number} a The number to test.\n * @param {number} min The minimum value in the range, inclusive.\n * @param {number} max The maximum value in the range, inclusive.\n * @return {boolean} True if a >= min and a <= max.\n */\nfunction inRange(a, min, max) {\n  return min <= a && a <= max;\n}\n\n/**\n * @param {*} o\n * @return {Object}\n */\nfunction ToDictionary(o) {\n  if (o === undefined) return {};\n  if (o === Object(o)) return o;\n  throw TypeError('Could not convert argument to dictionary');\n}\n\n/**\n * @param {string} string Input string of UTF-16 code units.\n * @return {!Array.<number>} Code points.\n */\nfunction stringToCodePoints(string) {\n  // https://heycam.github.io/webidl/#dfn-obtain-unicode\n\n  // 1. Let S be the DOMString value.\n  var s = String(string);\n\n  // 2. Let n be the length of S.\n  var n = s.length;\n\n  // 3. Initialize i to 0.\n  var i = 0;\n\n  // 4. Initialize U to be an empty sequence of Unicode characters.\n  var u = [];\n\n  // 5. While i < n:\n  while (i < n) {\n\n    // 1. Let c be the code unit in S at index i.\n    var c = s.charCodeAt(i);\n\n    // 2. Depending on the value of c:\n\n    // c < 0xD800 or c > 0xDFFF\n    if (c < 0xD800 || c > 0xDFFF) {\n      // Append to U the Unicode character with code point c.\n      u.push(c);\n    }\n\n    // 0xDC00 ≤ c ≤ 0xDFFF\n    else if (0xDC00 <= c && c <= 0xDFFF) {\n      // Append to U a U+FFFD REPLACEMENT CHARACTER.\n      u.push(0xFFFD);\n    }\n\n    // 0xD800 ≤ c ≤ 0xDBFF\n    else if (0xD800 <= c && c <= 0xDBFF) {\n      // 1. If i = n−1, then append to U a U+FFFD REPLACEMENT\n      // CHARACTER.\n      if (i === n - 1) {\n        u.push(0xFFFD);\n      }\n      // 2. Otherwise, i < n−1:\n      else {\n        // 1. Let d be the code unit in S at index i+1.\n        var d = string.charCodeAt(i + 1);\n\n        // 2. If 0xDC00 ≤ d ≤ 0xDFFF, then:\n        if (0xDC00 <= d && d <= 0xDFFF) {\n          // 1. Let a be c & 0x3FF.\n          var a = c & 0x3FF;\n\n          // 2. Let b be d & 0x3FF.\n          var b = d & 0x3FF;\n\n          // 3. Append to U the Unicode character with code point\n          // 2^16+2^10*a+b.\n          u.push(0x10000 + (a << 10) + b);\n\n          // 4. Set i to i+1.\n          i += 1;\n        }\n\n        // 3. Otherwise, d < 0xDC00 or d > 0xDFFF. Append to U a\n        // U+FFFD REPLACEMENT CHARACTER.\n        else  {\n          u.push(0xFFFD);\n        }\n      }\n    }\n\n    // 3. Set i to i+1.\n    i += 1;\n  }\n\n  // 6. Return U.\n  return u;\n}\n\n/**\n * @param {!Array.<number>} code_points Array of code points.\n * @return {string} string String of UTF-16 code units.\n */\nfunction codePointsToString(code_points) {\n  var s = '';\n  for (var i = 0; i < code_points.length; ++i) {\n    var cp = code_points[i];\n    if (cp <= 0xFFFF) {\n      s += String.fromCharCode(cp);\n    } else {\n      cp -= 0x10000;\n      s += String.fromCharCode((cp >> 10) + 0xD800,\n                               (cp & 0x3FF) + 0xDC00);\n    }\n  }\n  return s;\n}\n\n\n//\n// Implementation of Encoding specification\n// https://encoding.spec.whatwg.org/\n//\n\n//\n// 3. Terminology\n//\n\n/**\n * End-of-stream is a special token that signifies no more tokens\n * are in the stream.\n * @const\n */ var end_of_stream = -1;\n\n/**\n * A stream represents an ordered sequence of tokens.\n *\n * @constructor\n * @param {!(Array.<number>|Uint8Array)} tokens Array of tokens that provide the\n * stream.\n */\nfunction Stream(tokens) {\n  /** @type {!Array.<number>} */\n  this.tokens = [].slice.call(tokens);\n}\n\nStream.prototype = {\n  /**\n   * @return {boolean} True if end-of-stream has been hit.\n   */\n  endOfStream: function() {\n    return !this.tokens.length;\n  },\n\n  /**\n   * When a token is read from a stream, the first token in the\n   * stream must be returned and subsequently removed, and\n   * end-of-stream must be returned otherwise.\n   *\n   * @return {number} Get the next token from the stream, or\n   * end_of_stream.\n   */\n   read: function() {\n    if (!this.tokens.length)\n      return end_of_stream;\n     return this.tokens.shift();\n   },\n\n  /**\n   * When one or more tokens are prepended to a stream, those tokens\n   * must be inserted, in given order, before the first token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The token(s) to prepend to the stream.\n   */\n  prepend: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.unshift(tokens.pop());\n    } else {\n      this.tokens.unshift(token);\n    }\n  },\n\n  /**\n   * When one or more tokens are pushed to a stream, those tokens\n   * must be inserted, in given order, after the last token in the\n   * stream.\n   *\n   * @param {(number|!Array.<number>)} token The tokens(s) to prepend to the stream.\n   */\n  push: function(token) {\n    if (Array.isArray(token)) {\n      var tokens = /**@type {!Array.<number>}*/(token);\n      while (tokens.length)\n        this.tokens.push(tokens.shift());\n    } else {\n      this.tokens.push(token);\n    }\n  }\n};\n\n//\n// 4. Encodings\n//\n\n// 4.1 Encoders and decoders\n\n/** @const */\nvar finished = -1;\n\n/**\n * @param {boolean} fatal If true, decoding errors raise an exception.\n * @param {number=} opt_code_point Override the standard fallback code point.\n * @return {number} The code point to insert on a decoding error.\n */\nfunction decoderError(fatal, opt_code_point) {\n  if (fatal)\n    throw TypeError('Decoder error');\n  return opt_code_point || 0xFFFD;\n}\n\n/** @interface */\nfunction Decoder() {}\nDecoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point, or |finished|.\n   */\n  handler: function(stream, bite) {}\n};\n\n/** @interface */\nfunction Encoder() {}\nEncoder.prototype = {\n  /**\n   * @param {Stream} stream The stream of code points being encoded.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit, or |finished|.\n   */\n  handler: function(stream, code_point) {}\n};\n\n//\n// 7. API\n//\n\n/** @const */ var DEFAULT_ENCODING = 'utf-8';\n\n// 7.1 Interface TextDecoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextDecoder(encoding, options) {\n  if (!(this instanceof TextDecoder)) {\n    return new TextDecoder(encoding, options);\n  }\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {boolean} */\n  this._BOMseen = false;\n  /** @private @type {?Decoder} */\n  this._decoder = null;\n  /** @private @type {boolean} */\n  this._fatal = Boolean(options['fatal']);\n  /** @private @type {boolean} */\n  this._ignoreBOM = Boolean(options['ignoreBOM']);\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n  Object.defineProperty(this, 'fatal', {value: this._fatal});\n  Object.defineProperty(this, 'ignoreBOM', {value: this._ignoreBOM});\n}\n\nTextDecoder.prototype = {\n  /**\n   * @param {ArrayBufferView=} input The buffer of bytes to decode.\n   * @param {Object=} options\n   * @return {string} The decoded string.\n   */\n  decode: function decode(input, options) {\n    var bytes;\n    if (typeof input === 'object' && input instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input);\n    } else if (typeof input === 'object' && 'buffer' in input &&\n               input.buffer instanceof ArrayBuffer) {\n      bytes = new Uint8Array(input.buffer,\n                             input.byteOffset,\n                             input.byteLength);\n    } else {\n      bytes = new Uint8Array(0);\n    }\n\n    options = ToDictionary(options);\n\n    if (!this._streaming) {\n      this._decoder = new UTF8Decoder({fatal: this._fatal});\n      this._BOMseen = false;\n    }\n    this._streaming = Boolean(options['stream']);\n\n    var input_stream = new Stream(bytes);\n\n    var code_points = [];\n\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n\n    while (!input_stream.endOfStream()) {\n      result = this._decoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (result === null)\n        continue;\n      if (Array.isArray(result))\n        code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n      else\n        code_points.push(result);\n    }\n    if (!this._streaming) {\n      do {\n        result = this._decoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (result === null)\n          continue;\n        if (Array.isArray(result))\n          code_points.push.apply(code_points, /**@type {!Array.<number>}*/(result));\n        else\n          code_points.push(result);\n      } while (!input_stream.endOfStream());\n      this._decoder = null;\n    }\n\n    if (code_points.length) {\n      // If encoding is one of utf-8, utf-16be, and utf-16le, and\n      // ignore BOM flag and BOM seen flag are unset, run these\n      // subsubsteps:\n      if (['utf-8'].indexOf(this.encoding) !== -1 &&\n          !this._ignoreBOM && !this._BOMseen) {\n        // If token is U+FEFF, set BOM seen flag.\n        if (code_points[0] === 0xFEFF) {\n          this._BOMseen = true;\n          code_points.shift();\n        } else {\n          // Otherwise, if token is not end-of-stream, set BOM seen\n          // flag and append token to output.\n          this._BOMseen = true;\n        }\n      }\n    }\n\n    return codePointsToString(code_points);\n  }\n};\n\n// 7.2 Interface TextEncoder\n\n/**\n * @constructor\n * @param {string=} encoding The label of the encoding;\n *     defaults to 'utf-8'.\n * @param {Object=} options\n */\nfunction TextEncoder(encoding, options) {\n  if (!(this instanceof TextEncoder))\n    return new TextEncoder(encoding, options);\n  encoding = encoding !== undefined ? String(encoding).toLowerCase() : DEFAULT_ENCODING;\n  if (encoding !== DEFAULT_ENCODING) {\n    throw new Error('Encoding not supported. Only utf-8 is supported');\n  }\n  options = ToDictionary(options);\n\n  /** @private @type {boolean} */\n  this._streaming = false;\n  /** @private @type {?Encoder} */\n  this._encoder = null;\n  /** @private @type {{fatal: boolean}} */\n  this._options = {fatal: Boolean(options['fatal'])};\n\n  Object.defineProperty(this, 'encoding', {value: 'utf-8'});\n}\n\nTextEncoder.prototype = {\n  /**\n   * @param {string=} opt_string The string to encode.\n   * @param {Object=} options\n   * @return {Uint8Array} Encoded bytes, as a Uint8Array.\n   */\n  encode: function encode(opt_string, options) {\n    opt_string = opt_string ? String(opt_string) : '';\n    options = ToDictionary(options);\n\n    // NOTE: This option is nonstandard. None of the encodings\n    // permitted for encoding (i.e. UTF-8, UTF-16) are stateful,\n    // so streaming is not necessary.\n    if (!this._streaming)\n      this._encoder = new UTF8Encoder(this._options);\n    this._streaming = Boolean(options['stream']);\n\n    var bytes = [];\n    var input_stream = new Stream(stringToCodePoints(opt_string));\n    /** @type {?(number|!Array.<number>)} */\n    var result;\n    while (!input_stream.endOfStream()) {\n      result = this._encoder.handler(input_stream, input_stream.read());\n      if (result === finished)\n        break;\n      if (Array.isArray(result))\n        bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n      else\n        bytes.push(result);\n    }\n    if (!this._streaming) {\n      while (true) {\n        result = this._encoder.handler(input_stream, input_stream.read());\n        if (result === finished)\n          break;\n        if (Array.isArray(result))\n          bytes.push.apply(bytes, /**@type {!Array.<number>}*/(result));\n        else\n          bytes.push(result);\n      }\n      this._encoder = null;\n    }\n    return new Uint8Array(bytes);\n  }\n};\n\n//\n// 8. The encoding\n//\n\n// 8.1 utf-8\n\n/**\n * @constructor\n * @implements {Decoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Decoder(options) {\n  var fatal = options.fatal;\n\n  // utf-8's decoder's has an associated utf-8 code point, utf-8\n  // bytes seen, and utf-8 bytes needed (all initially 0), a utf-8\n  // lower boundary (initially 0x80), and a utf-8 upper boundary\n  // (initially 0xBF).\n  var /** @type {number} */ utf8_code_point = 0,\n      /** @type {number} */ utf8_bytes_seen = 0,\n      /** @type {number} */ utf8_bytes_needed = 0,\n      /** @type {number} */ utf8_lower_boundary = 0x80,\n      /** @type {number} */ utf8_upper_boundary = 0xBF;\n\n  /**\n   * @param {Stream} stream The stream of bytes being decoded.\n   * @param {number} bite The next byte read from the stream.\n   * @return {?(number|!Array.<number>)} The next code point(s)\n   *     decoded, or null if not enough data exists in the input\n   *     stream to decode a complete code point.\n   */\n  this.handler = function(stream, bite) {\n    // 1. If byte is end-of-stream and utf-8 bytes needed is not 0,\n    // set utf-8 bytes needed to 0 and return error.\n    if (bite === end_of_stream && utf8_bytes_needed !== 0) {\n      utf8_bytes_needed = 0;\n      return decoderError(fatal);\n    }\n\n    // 2. If byte is end-of-stream, return finished.\n    if (bite === end_of_stream)\n      return finished;\n\n    // 3. If utf-8 bytes needed is 0, based on byte:\n    if (utf8_bytes_needed === 0) {\n\n      // 0x00 to 0x7F\n      if (inRange(bite, 0x00, 0x7F)) {\n        // Return a code point whose value is byte.\n        return bite;\n      }\n\n      // 0xC2 to 0xDF\n      if (inRange(bite, 0xC2, 0xDF)) {\n        // Set utf-8 bytes needed to 1 and utf-8 code point to byte\n        // − 0xC0.\n        utf8_bytes_needed = 1;\n        utf8_code_point = bite - 0xC0;\n      }\n\n      // 0xE0 to 0xEF\n      else if (inRange(bite, 0xE0, 0xEF)) {\n        // 1. If byte is 0xE0, set utf-8 lower boundary to 0xA0.\n        if (bite === 0xE0)\n          utf8_lower_boundary = 0xA0;\n        // 2. If byte is 0xED, set utf-8 upper boundary to 0x9F.\n        if (bite === 0xED)\n          utf8_upper_boundary = 0x9F;\n        // 3. Set utf-8 bytes needed to 2 and utf-8 code point to\n        // byte − 0xE0.\n        utf8_bytes_needed = 2;\n        utf8_code_point = bite - 0xE0;\n      }\n\n      // 0xF0 to 0xF4\n      else if (inRange(bite, 0xF0, 0xF4)) {\n        // 1. If byte is 0xF0, set utf-8 lower boundary to 0x90.\n        if (bite === 0xF0)\n          utf8_lower_boundary = 0x90;\n        // 2. If byte is 0xF4, set utf-8 upper boundary to 0x8F.\n        if (bite === 0xF4)\n          utf8_upper_boundary = 0x8F;\n        // 3. Set utf-8 bytes needed to 3 and utf-8 code point to\n        // byte − 0xF0.\n        utf8_bytes_needed = 3;\n        utf8_code_point = bite - 0xF0;\n      }\n\n      // Otherwise\n      else {\n        // Return error.\n        return decoderError(fatal);\n      }\n\n      // Then (byte is in the range 0xC2 to 0xF4) set utf-8 code\n      // point to utf-8 code point << (6 × utf-8 bytes needed) and\n      // return continue.\n      utf8_code_point = utf8_code_point << (6 * utf8_bytes_needed);\n      return null;\n    }\n\n    // 4. If byte is not in the range utf-8 lower boundary to utf-8\n    // upper boundary, run these substeps:\n    if (!inRange(bite, utf8_lower_boundary, utf8_upper_boundary)) {\n\n      // 1. Set utf-8 code point, utf-8 bytes needed, and utf-8\n      // bytes seen to 0, set utf-8 lower boundary to 0x80, and set\n      // utf-8 upper boundary to 0xBF.\n      utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n      utf8_lower_boundary = 0x80;\n      utf8_upper_boundary = 0xBF;\n\n      // 2. Prepend byte to stream.\n      stream.prepend(bite);\n\n      // 3. Return error.\n      return decoderError(fatal);\n    }\n\n    // 5. Set utf-8 lower boundary to 0x80 and utf-8 upper boundary\n    // to 0xBF.\n    utf8_lower_boundary = 0x80;\n    utf8_upper_boundary = 0xBF;\n\n    // 6. Increase utf-8 bytes seen by one and set utf-8 code point\n    // to utf-8 code point + (byte − 0x80) << (6 × (utf-8 bytes\n    // needed − utf-8 bytes seen)).\n    utf8_bytes_seen += 1;\n    utf8_code_point += (bite - 0x80) << (6 * (utf8_bytes_needed - utf8_bytes_seen));\n\n    // 7. If utf-8 bytes seen is not equal to utf-8 bytes needed,\n    // continue.\n    if (utf8_bytes_seen !== utf8_bytes_needed)\n      return null;\n\n    // 8. Let code point be utf-8 code point.\n    var code_point = utf8_code_point;\n\n    // 9. Set utf-8 code point, utf-8 bytes needed, and utf-8 bytes\n    // seen to 0.\n    utf8_code_point = utf8_bytes_needed = utf8_bytes_seen = 0;\n\n    // 10. Return a code point whose value is code point.\n    return code_point;\n  };\n}\n\n/**\n * @constructor\n * @implements {Encoder}\n * @param {{fatal: boolean}} options\n */\nfunction UTF8Encoder(options) {\n  var fatal = options.fatal;\n  /**\n   * @param {Stream} stream Input stream.\n   * @param {number} code_point Next code point read from the stream.\n   * @return {(number|!Array.<number>)} Byte(s) to emit.\n   */\n  this.handler = function(stream, code_point) {\n    // 1. If code point is end-of-stream, return finished.\n    if (code_point === end_of_stream)\n      return finished;\n\n    // 2. If code point is in the range U+0000 to U+007F, return a\n    // byte whose value is code point.\n    if (inRange(code_point, 0x0000, 0x007f))\n      return code_point;\n\n    // 3. Set count and offset based on the range code point is in:\n    var count, offset;\n    // U+0080 to U+07FF:    1 and 0xC0\n    if (inRange(code_point, 0x0080, 0x07FF)) {\n      count = 1;\n      offset = 0xC0;\n    }\n    // U+0800 to U+FFFF:    2 and 0xE0\n    else if (inRange(code_point, 0x0800, 0xFFFF)) {\n      count = 2;\n      offset = 0xE0;\n    }\n    // U+10000 to U+10FFFF: 3 and 0xF0\n    else if (inRange(code_point, 0x10000, 0x10FFFF)) {\n      count = 3;\n      offset = 0xF0;\n    }\n\n    // 4.Let bytes be a byte sequence whose first byte is (code\n    // point >> (6 × count)) + offset.\n    var bytes = [(code_point >> (6 * count)) + offset];\n\n    // 5. Run these substeps while count is greater than 0:\n    while (count > 0) {\n\n      // 1. Set temp to code point >> (6 × (count − 1)).\n      var temp = code_point >> (6 * (count - 1));\n\n      // 2. Append to bytes 0x80 | (temp & 0x3F).\n      bytes.push(0x80 | (temp & 0x3F));\n\n      // 3. Decrease count by one.\n      count -= 1;\n    }\n\n    // 6. Return bytes bytes, in order.\n    return bytes;\n  };\n}\n\nexport {TextEncoder, TextDecoder};\n","import { PublicKey } from '@solana/web3.js';\nimport BN from 'bn.js';\nimport * as borsh from 'borsh';\nimport './extendBorsh';\n\nexport enum SimpleTreasuryMode {\n    Locked,\n    Unlocked\n}\n\nexport class SimpleTreasury {\n    public mint: PublicKey;\n    public mode: SimpleTreasuryMode;\n    public authority: PublicKey;\n\n    constructor(params: {\n        mint: PublicKey;\n        mode: SimpleTreasuryMode;\n        authority: PublicKey;\n    }) {\n        this.mint = params.mint;\n        this.mode = params.mode;\n        this.authority = params.authority;\n    }\n}\n\nexport class VestedTreasury {\n    public mint: PublicKey;\n    public authority: PublicKey;\n    public initialAmount: BN;\n    public start: Date;\n    public vestmentPeriod: BN;\n    public vestmentPercentage: number;\n    public withdrawn: BN;\n\n    constructor(params: {\n        mint: PublicKey;\n        authority: PublicKey;\n        initialAmount: BN;\n        start: BN;\n        vestmentPeriod: BN;\n        vestmentPercentage: number;\n        withdrawn: BN;\n    }) {\n        this.mint = params.mint;\n        this.authority = params.authority;\n        this.initialAmount = params.initialAmount;\n        this.start = new Date(params.start.toNumber() * 1000);\n        this.vestmentPeriod = params.vestmentPeriod;\n        this.vestmentPercentage = params.vestmentPercentage;\n        this.withdrawn = params.withdrawn;\n    }\n\n    public maximum_available(now: Date): BN {\n        const period =\n            Math.floor(now.getTime() / 1000) -\n            Math.floor(this.start.getTime() / 1000);\n        if (period <= 0) {\n            return new BN(0);\n        }\n\n        const ticks = new BN(period).div(this.vestmentPeriod);\n        const percentage = this.vestmentPercentage / 10000;\n        const amount = this.initialAmount.muln(percentage).mul(ticks);\n        return amount.gt(this.initialAmount) ? this.initialAmount : amount;\n    }\n\n    public available(now: Date): BN {\n        const available = this.maximum_available(now).sub(this.withdrawn);\n        return available.ltn(0) ? new BN(0) : available;\n    }\n}\n\nexport const ACCOUNT_SCHEMA: borsh.Schema = new Map<any, any>([\n    [\n        SimpleTreasury,\n        {\n            kind: 'struct',\n            fields: [\n                ['mint', 'PublicKey'],\n                ['mode', 'SimpleTreasuryMode'],\n                ['authority', 'PublicKey']\n            ]\n        }\n    ],\n    [\n        VestedTreasury,\n        {\n            kind: 'struct',\n            fields: [\n                ['mint', 'PublicKey'],\n                ['authority', 'PublicKey'],\n                ['initialAmount', 'u64'],\n                ['start', 'u64'],\n                ['vestmentPeriod', 'u64'],\n                ['vestmentPercentage', 'u16'],\n                ['withdrawn', 'u64']\n            ]\n        }\n    ]\n]);\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.deserializeUnchecked = exports.deserialize = exports.serialize = exports.BinaryReader = exports.BinaryWriter = exports.BorshError = exports.baseDecode = exports.baseEncode = void 0;\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nconst bs58_1 = __importDefault(require(\"bs58\"));\n// TODO: Make sure this polyfill not included when not required\nconst encoding = __importStar(require(\"text-encoding-utf-8\"));\nconst TextDecoder = (typeof global.TextDecoder !== 'function') ? encoding.TextDecoder : global.TextDecoder;\nconst textDecoder = new TextDecoder('utf-8', { fatal: true });\nfunction baseEncode(value) {\n    if (typeof (value) === 'string') {\n        value = Buffer.from(value, 'utf8');\n    }\n    return bs58_1.default.encode(Buffer.from(value));\n}\nexports.baseEncode = baseEncode;\nfunction baseDecode(value) {\n    return Buffer.from(bs58_1.default.decode(value));\n}\nexports.baseDecode = baseDecode;\nconst INITIAL_LENGTH = 1024;\nclass BorshError extends Error {\n    constructor(message) {\n        super(message);\n        this.fieldPath = [];\n        this.originalMessage = message;\n    }\n    addToFieldPath(fieldName) {\n        this.fieldPath.splice(0, 0, fieldName);\n        // NOTE: Modifying message directly as jest doesn't use .toString()\n        this.message = this.originalMessage + ': ' + this.fieldPath.join('.');\n    }\n}\nexports.BorshError = BorshError;\n/// Binary encoder.\nclass BinaryWriter {\n    constructor() {\n        this.buf = Buffer.alloc(INITIAL_LENGTH);\n        this.length = 0;\n    }\n    maybeResize() {\n        if (this.buf.length < 16 + this.length) {\n            this.buf = Buffer.concat([this.buf, Buffer.alloc(INITIAL_LENGTH)]);\n        }\n    }\n    writeU8(value) {\n        this.maybeResize();\n        this.buf.writeUInt8(value, this.length);\n        this.length += 1;\n    }\n    writeU16(value) {\n        this.maybeResize();\n        this.buf.writeUInt16LE(value, this.length);\n        this.length += 2;\n    }\n    writeU32(value) {\n        this.maybeResize();\n        this.buf.writeUInt32LE(value, this.length);\n        this.length += 4;\n    }\n    writeU64(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 8)));\n    }\n    writeU128(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 16)));\n    }\n    writeU256(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 32)));\n    }\n    writeU512(value) {\n        this.maybeResize();\n        this.writeBuffer(Buffer.from(new bn_js_1.default(value).toArray('le', 64)));\n    }\n    writeBuffer(buffer) {\n        // Buffer.from is needed as this.buf.subarray can return plain Uint8Array in browser\n        this.buf = Buffer.concat([Buffer.from(this.buf.subarray(0, this.length)), buffer, Buffer.alloc(INITIAL_LENGTH)]);\n        this.length += buffer.length;\n    }\n    writeString(str) {\n        this.maybeResize();\n        const b = Buffer.from(str, 'utf8');\n        this.writeU32(b.length);\n        this.writeBuffer(b);\n    }\n    writeFixedArray(array) {\n        this.writeBuffer(Buffer.from(array));\n    }\n    writeArray(array, fn) {\n        this.maybeResize();\n        this.writeU32(array.length);\n        for (const elem of array) {\n            this.maybeResize();\n            fn(elem);\n        }\n    }\n    toArray() {\n        return this.buf.subarray(0, this.length);\n    }\n}\nexports.BinaryWriter = BinaryWriter;\nfunction handlingRangeError(target, propertyKey, propertyDescriptor) {\n    const originalMethod = propertyDescriptor.value;\n    propertyDescriptor.value = function (...args) {\n        try {\n            return originalMethod.apply(this, args);\n        }\n        catch (e) {\n            if (e instanceof RangeError) {\n                const code = e.code;\n                if (['ERR_BUFFER_OUT_OF_BOUNDS', 'ERR_OUT_OF_RANGE'].indexOf(code) >= 0) {\n                    throw new BorshError('Reached the end of buffer when deserializing');\n                }\n            }\n            throw e;\n        }\n    };\n}\nclass BinaryReader {\n    constructor(buf) {\n        this.buf = buf;\n        this.offset = 0;\n    }\n    readU8() {\n        const value = this.buf.readUInt8(this.offset);\n        this.offset += 1;\n        return value;\n    }\n    readU16() {\n        const value = this.buf.readUInt16LE(this.offset);\n        this.offset += 2;\n        return value;\n    }\n    readU32() {\n        const value = this.buf.readUInt32LE(this.offset);\n        this.offset += 4;\n        return value;\n    }\n    readU64() {\n        const buf = this.readBuffer(8);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU128() {\n        const buf = this.readBuffer(16);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU256() {\n        const buf = this.readBuffer(32);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readU512() {\n        const buf = this.readBuffer(64);\n        return new bn_js_1.default(buf, 'le');\n    }\n    readBuffer(len) {\n        if ((this.offset + len) > this.buf.length) {\n            throw new BorshError(`Expected buffer length ${len} isn't within bounds`);\n        }\n        const result = this.buf.slice(this.offset, this.offset + len);\n        this.offset += len;\n        return result;\n    }\n    readString() {\n        const len = this.readU32();\n        const buf = this.readBuffer(len);\n        try {\n            // NOTE: Using TextDecoder to fail on invalid UTF-8\n            return textDecoder.decode(buf);\n        }\n        catch (e) {\n            throw new BorshError(`Error decoding UTF-8 string: ${e}`);\n        }\n    }\n    readFixedArray(len) {\n        return new Uint8Array(this.readBuffer(len));\n    }\n    readArray(fn) {\n        const len = this.readU32();\n        const result = Array();\n        for (let i = 0; i < len; ++i) {\n            result.push(fn());\n        }\n        return result;\n    }\n}\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU8\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU16\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU32\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU64\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU128\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU256\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readU512\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readString\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readFixedArray\", null);\n__decorate([\n    handlingRangeError\n], BinaryReader.prototype, \"readArray\", null);\nexports.BinaryReader = BinaryReader;\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction serializeField(schema, fieldName, value, fieldType, writer) {\n    try {\n        // TODO: Handle missing values properly (make sure they never result in just skipped write)\n        if (typeof fieldType === 'string') {\n            writer[`write${capitalizeFirstLetter(fieldType)}`](value);\n        }\n        else if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                if (value.length !== fieldType[0]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[0]}, but got ${value.length} bytes`);\n                }\n                writer.writeFixedArray(value);\n            }\n            else if (fieldType.length === 2 && typeof fieldType[1] === 'number') {\n                if (value.length !== fieldType[1]) {\n                    throw new BorshError(`Expecting byte array of length ${fieldType[1]}, but got ${value.length} bytes`);\n                }\n                for (let i = 0; i < fieldType[1]; i++) {\n                    serializeField(schema, null, value[i], fieldType[0], writer);\n                }\n            }\n            else {\n                writer.writeArray(value, (item) => { serializeField(schema, fieldName, item, fieldType[0], writer); });\n            }\n        }\n        else if (fieldType.kind !== undefined) {\n            switch (fieldType.kind) {\n                case 'option': {\n                    if (value === null || value === undefined) {\n                        writer.writeU8(0);\n                    }\n                    else {\n                        writer.writeU8(1);\n                        serializeField(schema, fieldName, value, fieldType.type, writer);\n                    }\n                    break;\n                }\n                default: throw new BorshError(`FieldType ${fieldType} unrecognized`);\n            }\n        }\n        else {\n            serializeStruct(schema, value, writer);\n        }\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction serializeStruct(schema, obj, writer) {\n    if (typeof obj.borshSerialize === 'function') {\n        obj.borshSerialize(writer);\n        return;\n    }\n    const structSchema = schema.get(obj.constructor);\n    if (!structSchema) {\n        throw new BorshError(`Class ${obj.constructor.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        structSchema.fields.map(([fieldName, fieldType]) => {\n            serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n        });\n    }\n    else if (structSchema.kind === 'enum') {\n        const name = obj[structSchema.field];\n        for (let idx = 0; idx < structSchema.values.length; ++idx) {\n            const [fieldName, fieldType] = structSchema.values[idx];\n            if (fieldName === name) {\n                writer.writeU8(idx);\n                serializeField(schema, fieldName, obj[fieldName], fieldType, writer);\n                break;\n            }\n        }\n    }\n    else {\n        throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${obj.constructor.name}`);\n    }\n}\n/// Serialize given object using schema of the form:\n/// { class_name -> [ [field_name, field_type], .. ], .. }\nfunction serialize(schema, obj, Writer = BinaryWriter) {\n    const writer = new Writer();\n    serializeStruct(schema, obj, writer);\n    return writer.toArray();\n}\nexports.serialize = serialize;\nfunction deserializeField(schema, fieldName, fieldType, reader) {\n    try {\n        if (typeof fieldType === 'string') {\n            return reader[`read${capitalizeFirstLetter(fieldType)}`]();\n        }\n        if (fieldType instanceof Array) {\n            if (typeof fieldType[0] === 'number') {\n                return reader.readFixedArray(fieldType[0]);\n            }\n            else if (typeof fieldType[1] === 'number') {\n                const arr = [];\n                for (let i = 0; i < fieldType[1]; i++) {\n                    arr.push(deserializeField(schema, null, fieldType[0], reader));\n                }\n                return arr;\n            }\n            else {\n                return reader.readArray(() => deserializeField(schema, fieldName, fieldType[0], reader));\n            }\n        }\n        if (fieldType.kind === 'option') {\n            const option = reader.readU8();\n            if (option) {\n                return deserializeField(schema, fieldName, fieldType.type, reader);\n            }\n            return undefined;\n        }\n        return deserializeStruct(schema, fieldType, reader);\n    }\n    catch (error) {\n        if (error instanceof BorshError) {\n            error.addToFieldPath(fieldName);\n        }\n        throw error;\n    }\n}\nfunction deserializeStruct(schema, classType, reader) {\n    if (typeof classType.borshDeserialize === 'function') {\n        return classType.borshDeserialize(reader);\n    }\n    const structSchema = schema.get(classType);\n    if (!structSchema) {\n        throw new BorshError(`Class ${classType.name} is missing in schema`);\n    }\n    if (structSchema.kind === 'struct') {\n        const result = {};\n        for (const [fieldName, fieldType] of schema.get(classType).fields) {\n            result[fieldName] = deserializeField(schema, fieldName, fieldType, reader);\n        }\n        return new classType(result);\n    }\n    if (structSchema.kind === 'enum') {\n        const idx = reader.readU8();\n        if (idx >= structSchema.values.length) {\n            throw new BorshError(`Enum index: ${idx} is out of range`);\n        }\n        const [fieldName, fieldType] = structSchema.values[idx];\n        const fieldValue = deserializeField(schema, fieldName, fieldType, reader);\n        return new classType({ [fieldName]: fieldValue });\n    }\n    throw new BorshError(`Unexpected schema kind: ${structSchema.kind} for ${classType.constructor.name}`);\n}\n/// Deserializes object from bytes using schema.\nfunction deserialize(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    const result = deserializeStruct(schema, classType, reader);\n    if (reader.offset < buffer.length) {\n        throw new BorshError(`Unexpected ${buffer.length - reader.offset} bytes after deserialized data`);\n    }\n    return result;\n}\nexports.deserialize = deserialize;\n/// Deserializes object from bytes using schema, without checking the length read\nfunction deserializeUnchecked(schema, classType, buffer, Reader = BinaryReader) {\n    const reader = new Reader(buffer);\n    return deserializeStruct(schema, classType, reader);\n}\nexports.deserializeUnchecked = deserializeUnchecked;\n","import { PublicKey } from '@solana/web3.js';\nimport { BinaryReader, BinaryWriter } from 'borsh';\nimport { SimpleTreasuryMode } from '.';\n\ndeclare module 'borsh' {\n    interface BinaryWriter {\n        writePublicKey(value: PublicKey): void;\n        writeSimpleTreasuryMode(value: number): void;\n        writeBigInt(value: bigint): void;\n    }\n    interface BinaryReader {\n        readPublicKey(): PublicKey;\n        readSimpleTreasuryMode(): SimpleTreasuryMode;\n        readBigInt(): bigint;\n    }\n}\n\nBinaryWriter.prototype.writePublicKey = function (value: PublicKey) {\n    this.writeFixedArray(value.toBuffer());\n};\n\nBinaryReader.prototype.readPublicKey = function () {\n    return new PublicKey(this.readFixedArray(32));\n};\n\nBinaryWriter.prototype.writeSimpleTreasuryMode = function (value: number) {\n    this.writeU8(value);\n};\n\nBinaryReader.prototype.readSimpleTreasuryMode = function () {\n    const mode = this.readU8();\n    switch (mode) {\n        case SimpleTreasuryMode.Locked:\n            return SimpleTreasuryMode.Locked;\n        case SimpleTreasuryMode.Unlocked:\n            return SimpleTreasuryMode.Unlocked;\n        default:\n            throw new Error('invalid simple treasury mode');\n    }\n};\n\nBinaryWriter.prototype.writeBigInt = function (value: bigint) {\n    const buf = Buffer.alloc(8);\n    buf.writeBigInt64LE(value);\n    this.writeFixedArray(buf);\n};\n\nBinaryReader.prototype.readBigInt = function () {\n    const buf = Buffer.from(this.readFixedArray(8));\n    return buf.readBigInt64LE();\n};\n","import {\n    AccountMeta,\n    PublicKey,\n    SystemProgram,\n    SYSVAR_CLOCK_PUBKEY,\n    SYSVAR_RENT_PUBKEY,\n    TransactionInstruction\n} from '@solana/web3.js';\nimport { Treasury } from './treasury';\nimport * as borsh from 'borsh';\nimport {\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    Token,\n    TOKEN_PROGRAM_ID\n} from '@solana/spl-token';\nimport { SimpleTreasuryMode } from './accounts';\n\nexport enum TreasuryInstructions {\n    CreateSimpleTreasury,\n    WithdrawSimple,\n    CreatedVestedTreasury,\n    WithdrawVested\n}\n\nexport class BasicSchema {\n    instructionId: number;\n\n    constructor(params: { instructionId: number }) {\n        this.instructionId = params.instructionId;\n    }\n}\n\nexport class SimpleSchema {\n    instructionId: number;\n    mode: SimpleTreasuryMode;\n\n    constructor(params: { instructionId: number; mode: SimpleTreasuryMode }) {\n        this.instructionId = params.instructionId;\n        this.mode = params.mode;\n    }\n}\n\nexport class SimpleWithdrawSchema {\n    instructionId: number;\n    amount: bigint;\n\n    constructor(params: { instructionId: number; amount: bigint }) {\n        this.instructionId = params.instructionId;\n        this.amount = params.amount;\n    }\n}\n\nexport class VestedSchema {\n    instructionId: number;\n    amount: bigint;\n    period: BigInt;\n    percentage: number;\n\n    constructor(params: {\n        instructionId: number;\n        amount: bigint;\n        period: BigInt;\n        percentage: number;\n    }) {\n        this.instructionId = params.instructionId;\n        this.amount = params.amount;\n        this.period = params.period;\n        this.percentage = params.percentage;\n    }\n}\n\nexport class TreasuryInstruction {\n    private static async CreateSimpleTreasury(\n        programId: PublicKey,\n        mint: PublicKey,\n        funder: PublicKey,\n        treasury: PublicKey,\n        authority: PublicKey,\n        mode: SimpleTreasuryMode = SimpleTreasuryMode.Locked\n    ): Promise<TransactionInstruction> {\n        const keys: AccountMeta[] = [\n            am(funder, true, true),\n            am(authority, false, false),\n            am(treasury, true, true),\n            am(mint, false, false),\n            am(SYSVAR_RENT_PUBKEY, false, false),\n            am(TOKEN_PROGRAM_ID, false, false),\n            am(SystemProgram.programId, false, false)\n        ];\n\n        const instruction = new SimpleSchema({\n            instructionId: TreasuryInstructions.CreateSimpleTreasury,\n            mode\n        });\n        const instructionData = borsh.serialize(\n            INSTRUCTION_SCHEMA,\n            instruction\n        );\n\n        return new TransactionInstruction({\n            keys: keys,\n            programId,\n            data: Buffer.from(instructionData)\n        });\n    }\n\n    public static async CreateSimpleTreasuryAndFundAccount(\n        programId: PublicKey,\n        mint: PublicKey,\n        funder: PublicKey,\n        treasury: PublicKey,\n        authority: PublicKey,\n        mode: SimpleTreasuryMode = SimpleTreasuryMode.Locked\n    ): Promise<TransactionInstruction[]> {\n        const fund = await Treasury.simpleTreasuryAssociatedAccount(\n            treasury,\n            mint,\n            programId\n        );\n\n        return [\n            Token.createAssociatedTokenAccountInstruction(\n                ASSOCIATED_TOKEN_PROGRAM_ID,\n                TOKEN_PROGRAM_ID,\n                mint,\n                fund.fund,\n                fund.authority,\n                funder\n            ),\n            await TreasuryInstruction.CreateSimpleTreasury(\n                programId,\n                mint,\n                funder,\n                treasury,\n                authority,\n                mode\n            )\n        ];\n    }\n\n    public static async WithdrawSimple(\n        programId: PublicKey,\n        mint: PublicKey,\n        funder: PublicKey,\n        treasury: PublicKey,\n        authority: PublicKey,\n        associated: PublicKey,\n        amount: bigint\n    ): Promise<TransactionInstruction> {\n        const fund = await Treasury.simpleTreasuryAssociatedAccount(\n            treasury,\n            mint,\n            programId\n        );\n\n        const keys: AccountMeta[] = [\n            am(funder, true, true),\n            am(authority, false, false),\n            am(associated, false, true),\n            am(treasury, false, false),\n            am(fund.authority, false, false),\n            am(fund.fund, false, true),\n            am(mint, false, false),\n            am(TOKEN_PROGRAM_ID, false, false)\n        ];\n\n        const instruction = new SimpleWithdrawSchema({\n            instructionId: TreasuryInstructions.CreateSimpleTreasury,\n            amount\n        });\n        const instructionData = borsh.serialize(\n            INSTRUCTION_SCHEMA,\n            instruction\n        );\n\n        return new TransactionInstruction({\n            keys: keys,\n            programId,\n            data: Buffer.from(instructionData)\n        });\n    }\n\n    private static CreateVestedTreasury(\n        programId: PublicKey,\n        mint: PublicKey,\n        funder: PublicKey,\n        treasury: PublicKey,\n        authority: PublicKey,\n        amount: bigint,\n        period: bigint,\n        percentage: number\n    ): TransactionInstruction {\n        const keys: AccountMeta[] = [\n            am(funder, true, true),\n            am(authority, false, false),\n            am(treasury, true, true),\n            am(mint, false, false),\n            am(SYSVAR_RENT_PUBKEY, false, false),\n            am(SYSVAR_CLOCK_PUBKEY, false, false),\n            am(SystemProgram.programId, false, false)\n        ];\n\n        const instruction = new VestedSchema({\n            instructionId: TreasuryInstructions.CreatedVestedTreasury,\n            amount,\n            period,\n            percentage\n        });\n        const instructionData = borsh.serialize(\n            INSTRUCTION_SCHEMA,\n            instruction\n        );\n\n        return new TransactionInstruction({\n            keys: keys,\n            programId,\n            data: Buffer.from(instructionData)\n        });\n    }\n\n    public static async CreateVestedTreasuryAndFundAccount(\n        programId: PublicKey,\n        mint: PublicKey,\n        funder: PublicKey,\n        treasury: PublicKey,\n        authority: PublicKey,\n        amount: bigint,\n        period: bigint,\n        percentage: number\n    ): Promise<TransactionInstruction[]> {\n        const fundAssoc = await Treasury.vestedTreasuryAssociatedAccount(\n            treasury,\n            mint,\n            programId\n        );\n\n        return [\n            Token.createAssociatedTokenAccountInstruction(\n                ASSOCIATED_TOKEN_PROGRAM_ID,\n                TOKEN_PROGRAM_ID,\n                mint,\n                fundAssoc.fund,\n                fundAssoc.authority,\n                funder\n            ),\n            TreasuryInstruction.CreateVestedTreasury(\n                programId,\n                mint,\n                funder,\n                treasury,\n                authority,\n                amount,\n                period,\n                percentage\n            )\n        ];\n    }\n\n    public static async WithdrawVested(\n        programId: PublicKey,\n        funder: PublicKey,\n        treasury: PublicKey,\n        authority: PublicKey,\n        mint: PublicKey\n    ): Promise<TransactionInstruction> {\n        const fundAssoc = await Treasury.vestedTreasuryAssociatedAccount(\n            treasury,\n            mint,\n            programId\n        );\n        const recipient = await Token.getAssociatedTokenAddress(\n            ASSOCIATED_TOKEN_PROGRAM_ID,\n            TOKEN_PROGRAM_ID,\n            mint,\n            authority\n        );\n\n        const keys: AccountMeta[] = [\n            am(funder, true, true),\n            am(authority, true, false),\n            am(recipient, false, true),\n            am(treasury, false, true),\n            am(fundAssoc.authority, false, false),\n            am(fundAssoc.fund, false, true),\n            am(SYSVAR_CLOCK_PUBKEY, false, false),\n            am(TOKEN_PROGRAM_ID, false, false),\n            am(SystemProgram.programId, false, false)\n        ];\n\n        const instruction = new BasicSchema({\n            instructionId: TreasuryInstructions.WithdrawVested\n        });\n        const instructionData = borsh.serialize(\n            INSTRUCTION_SCHEMA,\n            instruction\n        );\n\n        return new TransactionInstruction({\n            keys: keys,\n            programId,\n            data: Buffer.from(instructionData)\n        });\n    }\n}\n\nfunction am(\n    pubkey: PublicKey,\n    isSigner: boolean,\n    isWritable: boolean\n): AccountMeta {\n    return { pubkey, isSigner, isWritable };\n}\n\nexport const INSTRUCTION_SCHEMA: borsh.Schema = new Map<any, any>([\n    [\n        BasicSchema,\n        {\n            kind: 'struct',\n            fields: [['instructionId', 'u8']]\n        }\n    ],\n    [\n        SimpleSchema,\n        {\n            kind: 'struct',\n            fields: [\n                ['instructionId', 'u8'],\n                ['mode', 'SimpleTreasuryMode']\n            ]\n        }\n    ],\n    [\n        SimpleWithdrawSchema,\n        {\n            kind: 'struct',\n            fields: [\n                ['instructionId', 'u8'],\n                ['amount', 'BigInt']\n            ]\n        }\n    ],\n    [\n        VestedSchema,\n        {\n            kind: 'struct',\n            fields: [\n                ['instructionId', 'u8'],\n                ['amount', 'BigInt'],\n                ['period', 'BigInt'],\n                ['percentage', 'u16']\n            ]\n        }\n    ]\n]);\n","import { Connection, PublicKey } from '@solana/web3.js';\nimport { ACCOUNT_SCHEMA } from './';\nimport * as borsh from 'borsh';\nimport { SimpleTreasury, VestedTreasury } from './accounts';\nimport {\n    ASSOCIATED_TOKEN_PROGRAM_ID,\n    Token,\n    TOKEN_PROGRAM_ID\n} from '@solana/spl-token';\n\nexport class Treasury {\n    connection: Connection;\n    programId: PublicKey;\n\n    constructor(connection: Connection, programId: PublicKey) {\n        this.connection = connection;\n        this.programId = programId;\n    }\n\n    public async getSimpleTreasury(\n        treasuryId: PublicKey\n    ): Promise<SimpleTreasury> {\n        const account = await this.connection.getAccountInfo(treasuryId);\n        if (account === null)\n            throw new Error('Unable to find simple treasury account');\n\n        return borsh.deserialize(ACCOUNT_SCHEMA, SimpleTreasury, account.data);\n    }\n\n    public async getVestedTreasury(\n        treasuryId: PublicKey\n    ): Promise<VestedTreasury> {\n        const account = await this.connection.getAccountInfo(treasuryId);\n        if (account === null)\n            throw new Error('Unable to find vested treasury account');\n\n        return borsh.deserialize(ACCOUNT_SCHEMA, VestedTreasury, account.data);\n    }\n\n    private static async treasuryAssociatedAccount(\n        phrase: string,\n        treasury: PublicKey,\n        mint: PublicKey,\n        programId: PublicKey\n    ): Promise<{ authority: PublicKey; fund: PublicKey }> {\n        const authority = (\n            await PublicKey.findProgramAddress(\n                [Buffer.from(phrase), treasury.toBuffer()],\n                programId\n            )\n        )[0];\n\n        return {\n            authority,\n            fund: await Token.getAssociatedTokenAddress(\n                ASSOCIATED_TOKEN_PROGRAM_ID,\n                TOKEN_PROGRAM_ID,\n                mint,\n                authority,\n                true\n            )\n        };\n    }\n\n    static async simpleTreasuryAssociatedAccount(\n        treasury: PublicKey,\n        mint: PublicKey,\n        programId: PublicKey\n    ): Promise<{ authority: PublicKey; fund: PublicKey }> {\n        return Treasury.treasuryAssociatedAccount(\n            'simple authority',\n            treasury,\n            mint,\n            programId\n        );\n    }\n\n    static async vestedTreasuryAssociatedAccount(\n        treasury: PublicKey,\n        mint: PublicKey,\n        programId: PublicKey\n    ): Promise<{ authority: PublicKey; fund: PublicKey }> {\n        return Treasury.treasuryAssociatedAccount(\n            'vested authority',\n            treasury,\n            mint,\n            programId\n        );\n    }\n}\n"],"names":["lookup","revLookup","Arr","Uint8Array","Array","code","i","len","length","charCodeAt","encodeChunk","uint8","start","end","num","output","push","join","buffer","offset","isLE","mLen","nBytes","e","m","eLen","eMax","eBias","nBits","d","s","NaN","Infinity","Math","pow","value","c","rt","abs","isNaN","floor","log","LN2","customInspectSymbol","Symbol","exports","Buffer","alloc","K_MAX_LENGTH","createBuffer","RangeError","buf","Object","setPrototypeOf","prototype","arg","encodingOrOffset","TypeError","allocUnsafe","from","string","encoding","isEncoding","byteLength","actual","write","slice","fromString","ArrayBuffer","isView","arrayView","isInstance","copy","fromArrayBuffer","byteOffset","fromArrayLike","fromArrayView","SharedArrayBuffer","valueOf","b","obj","isBuffer","checked","undefined","numberIsNaN","type","isArray","data","fromObject","toPrimitive","assertSize","size","array","toString","mustMatch","arguments","loweredCase","utf8ToBytes","base64ToBytes","toLowerCase","slowToString","this","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","n","bidirectionalIndexOf","val","dir","arrayIndexOf","indexOf","call","lastIndexOf","arr","indexSize","arrLength","valLength","String","read","readUInt16BE","foundIndex","found","j","hexWrite","Number","remaining","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","str","byteArray","asciiToBytes","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","tmp","extraBytes","parts","maxChunkLength","len2","base64","min","res","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","apply","decodeCodePointsArray","TYPED_ARRAY_SUPPORT","proto","foo","typedArraySupport","console","error","defineProperty","enumerable","get","poolSize","fill","allocUnsafeSlow","_isBuffer","compare","a","x","y","concat","list","pos","set","swap16","swap32","swap64","toLocaleString","equals","inspect","max","INSPECT_MAX_BYTES","replace","trim","target","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","Error","toJSON","_arr","ret","out","hexSliceLookupTable","bytes","checkOffset","ext","checkInt","wrtBigUInt64LE","checkIntBI","BigInt","wrtBigUInt64BE","checkIEEE754","writeFloat","littleEndian","noAssert","ieee754","writeDouble","newBuf","subarray","readUintLE","readUIntLE","mul","readUintBE","readUIntBE","readUint8","readUInt8","readUint16LE","readUInt16LE","readUint16BE","readUint32LE","readUInt32LE","readUint32BE","readUInt32BE","readBigUInt64LE","defineBigIntMethod","validateNumber","first","last","boundsError","readBigUInt64BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readBigInt64LE","readBigInt64BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUintLE","writeUIntLE","writeUintBE","writeUIntBE","writeUint8","writeUInt8","writeUint16LE","writeUInt16LE","writeUint16BE","writeUInt16BE","writeUint32LE","writeUInt32LE","writeUint32BE","writeUInt32BE","writeBigUInt64LE","writeBigUInt64BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeBigInt64LE","writeBigInt64BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","copyWithin","errors","E","sym","getMessage","Base","constructor","super","writable","configurable","name","message","addNumericalSeparator","range","ERR_OUT_OF_RANGE","checkBounds","ERR_INVALID_ARG_TYPE","ERR_BUFFER_OUT_OF_BOUNDS","input","msg","received","isInteger","INVALID_BASE64_RE","leadSurrogate","b64","lens","validLen","getLens","placeHoldersLen","_byteLength","curByte","split","base64clean","src","dst","alphabet","table","i16","fn","BufferBigIntNotDefined","copyProps","key","SafeBuffer","module","create","SlowBuffer","_Buffer","require$$0","ALPHABET","BASE_MAP","charAt","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","source","psz","zeroes","b256","carry","it3","it4","vch","encode","pbegin","pend","b58","it1","it2","repeat","decode","basex","inRange","ToDictionary","o","Stream","tokens","endOfStream","shift","prepend","token","unshift","pop","finished","decoderError","fatal","opt_code_point","DEFAULT_ENCODING","TextDecoder","options","_streaming","_BOMseen","_decoder","_fatal","Boolean","_ignoreBOM","TextEncoder","_encoder","_options","UTF8Decoder","utf8_code_point","utf8_bytes_seen","utf8_bytes_needed","utf8_lower_boundary","utf8_upper_boundary","handler","stream","bite","code_point","UTF8Encoder","count","result","input_stream","code_points","cp","codePointsToString","opt_string","u","stringToCodePoints","SimpleTreasuryMode","__createBinding","k","k2","__setModuleDefault","v","__decorate","decorators","desc","r","getOwnPropertyDescriptor","Reflect","decorate","__importStar","mod","__esModule","hasOwnProperty","__importDefault","default","bn_js_1","bs58_1","require$$1","require$$2","textDecoder","global","INITIAL_LENGTH","BorshError","fieldPath","originalMessage","addToFieldPath","fieldName","splice","BinaryWriter","maybeResize","writeU8","writeU16","writeU32","writeU64","writeBuffer","toArray","writeU128","writeU256","writeU512","writeString","writeFixedArray","writeArray","elem","handlingRangeError","propertyKey","propertyDescriptor","originalMethod","args","BinaryReader","readU8","readU16","readU32","readU64","readBuffer","readU128","readU256","readU512","readString","readFixedArray","readArray","capitalizeFirstLetter","toUpperCase","serializeField","schema","fieldType","writer","item","kind","serializeStruct","borshSerialize","structSchema","fields","map","field","idx","values","deserializeField","reader","deserializeStruct","classType","borshDeserialize","Writer","Reader","writePublicKey","toBuffer","readPublicKey","PublicKey","writeSimpleTreasuryMode","readSimpleTreasuryMode","Locked","Unlocked","writeBigInt","readBigInt","SimpleTreasury","TreasuryInstructions","params","mint","mode","authority","VestedTreasury","initialAmount","vestmentPeriod","vestmentPercentage","withdrawn","Date","toNumber","maximum_available","now","period","getTime","BN","ticks","div","amount","muln","gt","available","ltn","ACCOUNT_SCHEMA","Map","Treasury","connection","programId","getSimpleTreasury","treasuryId","getAccountInfo","account","borsh","getVestedTreasury","treasuryAssociatedAccount","phrase","treasury","findProgramAddress","_PublicKey$findProgra","Token","getAssociatedTokenAddress","ASSOCIATED_TOKEN_PROGRAM_ID","TOKEN_PROGRAM_ID","fund","simpleTreasuryAssociatedAccount","vestedTreasuryAssociatedAccount","BasicSchema","instructionId","SimpleSchema","SimpleWithdrawSchema","VestedSchema","percentage","TreasuryInstruction","CreateSimpleTreasury","funder","keys","am","SYSVAR_RENT_PUBKEY","SystemProgram","instruction","instructionData","INSTRUCTION_SCHEMA","TransactionInstruction","CreateSimpleTreasuryAndFundAccount","createAssociatedTokenAccountInstruction","WithdrawSimple","associated","CreateVestedTreasury","SYSVAR_CLOCK_PUBKEY","CreatedVestedTreasury","CreateVestedTreasuryAndFundAccount","fundAssoc","WithdrawVested","recipient","pubkey","isSigner","isWritable"],"mappings":"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"}